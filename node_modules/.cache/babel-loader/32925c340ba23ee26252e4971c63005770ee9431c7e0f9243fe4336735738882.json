{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"ProductDisplay\",\n  data() {\n    return {\n      productData: null,\n      productId: 1,\n      maximumProduct: 0,\n      isLoading: false,\n      isProductAvailable: false,\n      isMenClothing: false,\n      isWomenClothing: false,\n      unavailableCount: 0 // New property to track the count of \"Product Unavailable\" messages\n    };\n  },\n\n  methods: {\n    fetchProductData() {\n      this.isLoading = true;\n      axios.get(`https://fakestoreapi.com/products/${this.productId}`).then(response => {\n        this.productData = response.data;\n        if (this.productData.category === \"men's clothing\") {\n          this.isProductAvailable = true;\n          this.isMenClothing = true;\n          this.isWomenClothing = false;\n        } else if (this.productData.category === \"women's clothing\") {\n          this.isProductAvailable = true;\n          this.isMenClothing = false;\n          this.isWomenClothing = true;\n        } else {\n          this.isProductAvailable = false;\n          this.isMenClothing = false;\n          this.isWomenClothing = false;\n        }\n        this.isLoading = false;\n      }).catch(error => {\n        console.log(error);\n        this.isLoading = false;\n      });\n    },\n    getMaximumProduct() {\n      axios.get(\"https://fakestoreapi.com/products\").then(response => {\n        this.maximumProduct = response.data.length;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    displayNextProduct() {\n      if (this.unavailableCount < 3) {\n        if (!this.isProductAvailable) {\n          this.unavailableCount++;\n        }\n        if (this.productId < this.maximumProduct) {\n          this.productId++;\n        } else {\n          this.productId = 1;\n        }\n        this.fetchProductData();\n      }\n    }\n  },\n  mounted() {\n    this.fetchProductData();\n    this.getMaximumProduct();\n  }\n};","map":{"version":3,"names":["axios","name","data","productData","productId","maximumProduct","isLoading","isProductAvailable","isMenClothing","isWomenClothing","unavailableCount","methods","fetchProductData","get","then","response","category","catch","error","console","log","getMaximumProduct","length","displayNextProduct","mounted"],"sources":["src/components/ProductDisplay.vue"],"sourcesContent":["<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"ProductDisplay\",\r\n  data() {\r\n    return {\r\n      productData: null,\r\n      productId: 1,\r\n      maximumProduct: 0,\r\n      isLoading: false,\r\n      isProductAvailable: false,\r\n      isMenClothing: false,\r\n      isWomenClothing: false,\r\n      unavailableCount: 0, // New property to track the count of \"Product Unavailable\" messages\r\n    };\r\n  },\r\n  methods: {\r\n    fetchProductData() {\r\n      this.isLoading = true;\r\n      axios\r\n        .get(`https://fakestoreapi.com/products/${this.productId}`)\r\n        .then((response) => {\r\n          this.productData = response.data;\r\n          if (this.productData.category === \"men's clothing\") {\r\n            this.isProductAvailable = true;\r\n            this.isMenClothing = true;\r\n            this.isWomenClothing = false;\r\n          } else if (this.productData.category === \"women's clothing\") {\r\n            this.isProductAvailable = true;\r\n            this.isMenClothing = false;\r\n            this.isWomenClothing = true;\r\n          } else {\r\n            this.isProductAvailable = false;\r\n            this.isMenClothing = false;\r\n            this.isWomenClothing = false;\r\n          }\r\n          this.isLoading = false;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n    getMaximumProduct() {\r\n      axios\r\n        .get(\"https://fakestoreapi.com/products\")\r\n        .then((response) => {\r\n          this.maximumProduct = response.data.length;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    displayNextProduct() {\r\n      if (this.unavailableCount < 3) {\r\n        if (!this.isProductAvailable) {\r\n          this.unavailableCount++;\r\n        }\r\n        if (this.productId < this.maximumProduct) {\r\n          this.productId++;\r\n        } else {\r\n          this.productId = 1;\r\n        }\r\n        this.fetchProductData();\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchProductData();\r\n    this.getMaximumProduct();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AACA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,SAAA;MACAC,cAAA;MACAC,SAAA;MACAC,kBAAA;MACAC,aAAA;MACAC,eAAA;MACAC,gBAAA;IACA;EACA;;EACAC,OAAA;IACAC,iBAAA;MACA,KAAAN,SAAA;MACAN,KAAA,CACAa,GAAA,2CAAAT,SAAA,IACAU,IAAA,CAAAC,QAAA;QACA,KAAAZ,WAAA,GAAAY,QAAA,CAAAb,IAAA;QACA,SAAAC,WAAA,CAAAa,QAAA;UACA,KAAAT,kBAAA;UACA,KAAAC,aAAA;UACA,KAAAC,eAAA;QACA,gBAAAN,WAAA,CAAAa,QAAA;UACA,KAAAT,kBAAA;UACA,KAAAC,aAAA;UACA,KAAAC,eAAA;QACA;UACA,KAAAF,kBAAA;UACA,KAAAC,aAAA;UACA,KAAAC,eAAA;QACA;QACA,KAAAH,SAAA;MACA,GACAW,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA,KAAAZ,SAAA;MACA;IACA;IACAe,kBAAA;MACArB,KAAA,CACAa,GAAA,sCACAC,IAAA,CAAAC,QAAA;QACA,KAAAV,cAAA,GAAAU,QAAA,CAAAb,IAAA,CAAAoB,MAAA;MACA,GACAL,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACAK,mBAAA;MACA,SAAAb,gBAAA;QACA,UAAAH,kBAAA;UACA,KAAAG,gBAAA;QACA;QACA,SAAAN,SAAA,QAAAC,cAAA;UACA,KAAAD,SAAA;QACA;UACA,KAAAA,SAAA;QACA;QACA,KAAAQ,gBAAA;MACA;IACA;EACA;EACAY,QAAA;IACA,KAAAZ,gBAAA;IACA,KAAAS,iBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}